---
import { type CollectionEntry, getCollection } from 'astro:content';
import { locales } from '@i18n/i18n';
import { getLocaleFromUrl} from '@i18n/utils';
import Post from '@layouts/Post.astro';
import getPostPath from '@utilities/getPostPath';
import getPublishedPosts from '@utilities/getPublishedPosts';

export async function getStaticPaths() {
	const collection = 'blog'
	const posts = await getPublishedPosts('', collection, '');
	let postsToRender = []
  for (let locale of locales) {
    const localePosts = posts
			.filter(function(entry){ return getLocaleFromUrl(entry.slug) === locale })
			.map((post) => ({
				params: { blogPostPath: `${getPostPath(locale, collection, post.slug)}` },
				props: post,
			}));
		postsToRender.push(...localePosts)
	}
	return postsToRender
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<Post {...post.data}>
	<Content />
</Post>