---
import { getUniqueTags, getTagPath} from '@utilities/tags';
import { locales } from '@i18n/i18n';
import { uiStrings } from '@i18n/ui';
import PostsPerTag from "@layouts/PostsPerTag.astro";
import { truncateDescription } from "@utilities/getPageDescription";

interface Tag {
	slugified: string;
  name: string;
}

export async function getStaticPaths() {
  let allPostsPerTagPages:any = []
  const getDescription = function(locale, name){
    const description = truncateDescription(`${uiStrings.postsPerTagPageDescription[locale]} ${name}.`)
    return description
  }
  for (let locale of locales) {
    const tags = (await getUniqueTags('blog', locale))
    .filter((tag)=>{return tag.slugified !== 'other'})
    .map(tag=>(  
      {
        params: {
          blogPostsPerTag: `${getTagPath(locale, tag.slugified, false)}`
        },
        props: {
          title: `${uiStrings.tagHeadingSingular[locale]}: ${tag.name}`,
          description: getDescription(tag.name, locale),
          tag: tag.slugified,
        }
      }
    ))
    allPostsPerTagPages.push(...tags)
  }
  return allPostsPerTagPages
}
---
<PostsPerTag frontmatter={Astro.props} collection="blog"/>
